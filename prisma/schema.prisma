// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mongodb"
  url      = env("DATABASE_URL")
}

model User {
  id        String  @id @default(auto()) @map("_id") @db.ObjectId
  username  String  @unique
  password  String
  statistic Stat[]
  timers    Timer[]
  tasks     Task[]
  token     String?
}

model Stat {
  id            String   @id @default(auto()) @map("_id") @db.ObjectId
  userId        String   @db.ObjectId
  user          User?    @relation(fields: [userId], references: [id])
  timestamp     DateTime @default(now())
  workingTime   Int
  pauseTime     Int
  pomodorosDone Int
  skipCount     Int
}

model Timer {
  id        String   @id @default(auto()) @map("_id") @db.ObjectId
  User      User?    @relation(fields: [userId], references: [id])
  userId    String?  @db.ObjectId
  startTime DateTime
  duration  Int
  isActive  Boolean
  type      String
}

model Task {
  id        String   @id @default(auto()) @map("_id") @db.ObjectId
  User      User?    @relation(fields: [userId], references: [id])
  userId    String?  @db.ObjectId
  title     String
  completed Boolean  @default(false)
  pomodoros Int      @default(0)
  createdAt DateTime @default(now())
}
